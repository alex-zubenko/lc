{#
/**
 * @file
 * Theme override to display all the fields in a row.
 * Bloc - front page  Comment ça marche block
 * Available variables:
 * - view: The view in use.
 * - fields: A list of fields, each one contains:
 *   - content: The output of the field.
 *   - raw: The raw data for the field, if it exists. This is NOT output safe.
 *   - class: The safe class ID to use.
 *   - handler: The Views field handler controlling this field.
 *   - inline: Whether or not the field should be inline.
 *   - wrapper_element: An HTML element for a wrapper.
 *   - wrapper_attributes: List of attributes for wrapper element.
 *   - separator: An optional separator that may appear before a field.
 *   - label: The field's label text.
 *   - label_element: An HTML element for a label wrapper.
 *   - label_attributes: List of attributes for label wrapper.
 *   - label_suffix: Colon after the label.
 *   - element_type: An HTML element for the field content.
 *   - element_attributes: List of attributes for HTML element for field content.
 *   - has_label_colon: A boolean indicating whether to display a colon after
 *     the label.
 *   - element_type: An HTML element for the field content.
 *   - element_attributes: List of attributes for HTML element for field content.
 * - row: The raw result from the query, with all data it fetched.
 *
 * @see template_preprocess_views_view_fields()
 */
#}
{# block hp coomment ça marche #}
<div data-aos="zoom-in"  data-aos-once="true"  class="col-sm-15">
     <div class="gallery-wrapper">
        <div class="gallery-image-wrap">
          <div class="gallery-image">{{ fields.field_image.content }}</div>
        </div>
        <h3>{{ fields.title.content }}</h3>
        {# for landing page add body#}
        {% if fields.body is defined and get_node_content_type() == "landing" %}
           <div class="views-field views-field-body">{{ fields.body.content }}</div>
        {% endif %}
    </div>
    {{ fields.edit_node.content }}
</div>
